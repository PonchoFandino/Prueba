{"version":3,"sources":["Components/Notas.jsx","Components/FormNota.jsx","Components/FormTareas.js","Components/tarea.jsx","App.js","serviceWorker.js","index.js"],"names":["Nota","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","notaContent","notaId","id","window","confirm","elimNota","_this2","react_default","a","createElement","className","onClick","noteRemove","Component","NoteForm","state","nuevaNota","entradaUser","bind","assertThisInitialized","addNota","e","setState","target","value","textInput","focus","placeholder","ref","entrada","onChange","type","TodoForm","titulo","responsable","descripcion","prioridad","handleInputChange","handleSubmit","preventDefault","onAddTodo","_e$target","name","console","log","defineProperty","onSubmit","Tasks","tareas","handleAddTodo","index","filter","i","tarea","toConsumableArray","concat","todos","map","key","removeTodo","Components_FormTareas","length","App","user","notas","pictures","iniSesion","finSesion","firebase","auth","onAuthStateChanged","_this3","database","on","snapshot","push","val","splice","child","remove","provider","GoogleAuthProvider","signInWithPopup","signOut","nota","set","_this4","for","src","photoURL","alt","displayName","Components_tarea","Notas","Components_FormNota","Boolean","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+SA+BgBA,qBA3BZ,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,YAAcR,EAAMQ,YACzBP,EAAKQ,OAAST,EAAMS,OAHNR,0EAKPS,GAEUC,OAAOC,QAAQ,qDAE5BR,KAAKJ,MAAMa,SAASH,oCAIpB,IAAAI,EAAAV,KACJ,OACIW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAChBC,QAAS,kBAAML,EAAKM,WAAWN,EAAKL,UACnCM,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBACdH,EAAAC,EAAAC,cAAA,SAAIb,KAAKI,uBAtBEa,cC2CFC,qBA1Cb,SAAAA,IAAc,IAAArB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkB,IACVrB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoB,GAAAf,KAAAH,QACKmB,MAAM,CACPC,UAAU,IAEdvB,EAAKwB,YAAcxB,EAAKwB,YAAYC,KAAjBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAD,KACnBA,EAAK2B,QAAU3B,EAAK2B,QAAQF,KAAbxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAD,KANLA,2EAQF4B,GACRzB,KAAK0B,SAAS,CACVN,UAAWK,EAAEE,OAAOC,0CAIxB5B,KAAKJ,MAAM4B,QAAQxB,KAAKmB,MAAMC,WAC9BpB,KAAK0B,SAAS,CACVN,UAAU,KAEdpB,KAAK6B,UAAUC,oDAGf9B,KAAK6B,UAAUC,yCAEV,IAAApB,EAAAV,KACL,OACAW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACAkB,YAAY,mBACZC,IAAK,SAAAC,GAAWvB,EAAKmB,UAAYI,GACjCL,MAAO5B,KAAKmB,MAAMC,UAClBc,SAAUlC,KAAKqB,YACfc,KAAM,SACNxB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAW,cAAaC,QAASf,KAAKwB,SAA9C,wBApCWP,sDCwFRmB,qBAvFb,SAAAA,IAAe,IAAAvC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoC,IACbvC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsC,GAAAjC,KAAAH,QACKmB,MAAQ,CACXkB,OAAQ,GACRC,YAAa,GACbC,YAAa,GACbC,UAAW,QAEb3C,EAAK4C,kBAAoB5C,EAAK4C,kBAAkBnB,KAAvBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAD,KACzBA,EAAK6C,aAAe7C,EAAK6C,aAAapB,KAAlBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAD,KATPA,4EAYF4B,GACXA,EAAEkB,iBACF3C,KAAKJ,MAAMgD,UAAU5C,KAAKmB,OAC1BnB,KAAK0B,SAAS,CACZW,OAAQ,GACRC,YAAa,GACbC,YAAa,GACbC,UAAW,mDAIGf,GAAG,IAAAoB,EACGpB,EAAEE,OAAjBC,EADYiB,EACZjB,MAAOkB,EADKD,EACLC,KACdC,QAAQC,IAAIpB,EAAOkB,GACnB9C,KAAK0B,SAAL5B,OAAAmD,EAAA,EAAAnD,CAAA,GACGgD,EAAOlB,qCAKV,OACEjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMqC,SAAUlD,KAAK0C,aAAc5B,UAAU,YAC3CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SACEsB,KAAK,OACLW,KAAK,SACLhC,UAAU,WACVc,MAAO5B,KAAKmB,MAAMkB,OAClBH,SAAUlC,KAAKyC,kBACfV,YAAY,eAGhBpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SACEsB,KAAK,OACLW,KAAK,cACLhC,UAAU,WACVc,MAAO5B,KAAKmB,MAAMmB,YAClBJ,SAAUlC,KAAKyC,kBACfV,YAAY,iBAGhBpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SACEsB,KAAK,OACLW,KAAK,cACLhC,UAAU,WACVc,MAAO5B,KAAKmB,MAAMoB,YAClBL,SAAUlC,KAAKyC,kBACfV,YAAY,oBAGhBpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UACIiC,KAAK,YACLhC,UAAU,WACVc,MAAO5B,KAAKmB,MAAMqB,UAClBN,SAAUlC,KAAKyC,mBAEjB9B,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,wBAGJF,EAAAC,EAAAC,cAAA,UAAQsB,KAAK,SAASrB,UAAU,YAAhC,wBA9EaG,cCsHRkC,cA5Gb,SAAAA,IAAc,IAAAtD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmD,IACZtD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqD,GAAAhD,KAAAH,QACKmB,MAAQ,CACXiC,OAAQ,IAEVvD,EAAKwD,cAAgBxD,EAAKwD,cAAc/B,KAAnBxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAD,KALTA,0EAgCHyD,GACTtD,KAAK0B,SAAS,CACZ0B,OAAQpD,KAAKmB,MAAMiC,OAAOG,OAAO,SAAC9B,EAAG+B,GACnC,OAAOA,IAAMF,4CAMLG,GACZzD,KAAK0B,SAAS,CACZ0B,OAAOtD,OAAA4D,EAAA,EAAA5D,CAAKE,KAAKmB,MAAMiC,QAAjBO,OAAA,CAAyBF,uCAK1B,IAAA/C,EAAAV,KACD4D,EAAQ5D,KAAKmB,MAAMiC,OAAOS,IAAI,SAACJ,EAAOD,GAC1C,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWgD,IAAKN,GAC3B7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UAAK4C,EAAMpB,SAGb1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SAAI4C,EAAMlB,aACV5B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBACb2C,EAAMjB,YAGX7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACb2C,EAAMnB,aAER3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEdH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UACEC,UAAU,WACVC,QAASL,EAAKqD,WAAWzC,KAAKZ,EAAM8C,IACpC7C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBASzB,OACEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAACmD,EAAD,CAAUpB,UAAW5C,KAAKqD,gBAC1B1C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAb,SAEEH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBACfd,KAAKmB,MAAMiC,OAAOa,UAKvBtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZ8C,cAnGG3C,aCqMLiD,cAnMb,SAAAA,EAAYtE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkE,IACjBrE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoE,GAAA/D,KAAAH,KAAMJ,KACDuB,MAAQ,CACTgD,KAAM,KACNC,MAAO,GACPC,SAAS,IAObxE,EAAK2B,QAAU3B,EAAK2B,QAAQF,KAAbxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAD,KACfA,EAAKyE,UAAYzE,EAAKyE,UAAUhD,KAAfxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAD,KACjBA,EAAK0E,UAAY1E,EAAK0E,UAAUjD,KAAfxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAD,KAEjBA,EAAKY,SAAWZ,EAAKY,SAASa,KAAdxB,OAAAyB,EAAA,EAAAzB,QAAAyB,EAAA,EAAAzB,CAAAD,KAhBCA,oFAqBA,IAAAa,EAAAV,KACnBwE,IAASC,OAAOC,mBAAmB,SAAAP,GACjCzD,EAAKgB,SAAS,CAACyC,uDAUE,IAAAQ,EAAA3E,KACVoE,EAASpE,KAAKmB,MAAdiD,MACPI,IAASI,WAAW5C,IAAI,SAAS6C,GAAG,cAAe,SAAAC,GACjDV,EAAMW,KAAK,CACT1E,OAAQyE,EAAShB,IACjB1D,YAAa0E,EAASE,MAAM5E,cAE9BuE,EAAKjD,SAAS,CAAC0C,YAEjBI,IAASI,WAAW5C,IAAI,SAAS6C,GAAG,gBAAiB,SAAAC,GACnD,IAAI,IAAItB,EAAG,EAAGA,EAAIY,EAAMH,OAAQT,KAC3BY,EAAMZ,GAAGnD,OAAOyE,EAAShB,MAC1BM,EAAMa,OAAOzB,EAAG,GAGpBmB,EAAKjD,SAAS,CAAC0C,6CAOV/D,GACPmE,IAASI,WAAW5C,IAAI,SAASkD,MAAM7E,GAAQ8E,6CAG/C,IAAMC,EAAS,IAAIZ,IAASC,KAAKY,mBACjCb,IAASC,OAAOa,gBAAgBF,uCAIhCZ,IAASC,OAAOc,0CAKVC,GAAK,IACLpB,EAAUpE,KAAKmB,MAAfiD,MACNA,EAAMW,KAAK,CACT1E,OAAO+D,EAAMH,OAAS,EACtB7D,YAAaoF,IAEfxF,KAAK0B,SAAS,CAAE8D,SAChBhB,IAASI,WAAW5C,IAAI,SAASyD,IAAI,CACnCD,KAAMA,qCA4BD,IAAAE,EAAA1F,KAEL,OACAW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACTH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,WACAH,EAAAC,EAAAC,cAAA,WACKb,KAAKmB,MAAMgD,KACdxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdH,EAAAC,EAAAC,cAAA,SAAOsB,KAAK,WAAW7B,GAAG,SAC1BK,EAAAC,EAAAC,cAAA,SAAO8E,IAAI,OAAO7E,UAAU,QAAOH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS8E,IAAK5F,KAAKmB,MAAMgD,KAAK0B,SAAUC,IAAK9F,KAAKmB,MAAMgD,KAAK4B,eAC9GpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEbH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAQd,KAAKmB,MAAMgD,KAAK4B,cACzCpF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAASC,QAASf,KAAKuE,WAAzC,YAGL5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACpBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAWC,QAASf,KAAKsE,WAA3C,WACA3D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,MAAb,4CAKPH,EAAAC,EAAAC,cAAA,WACIb,KAAKmB,MAAMgD,KACbxD,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACmF,EAAD,MACErF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZd,KAAKmB,MAAMiD,MAAMP,IAAI,SAAA2B,GAClB,OACE7E,EAAAC,EAAAC,cAACoF,EAAD,CACA7F,YAAaoF,EAAKpF,YAClBC,OAAQmF,EAAKnF,OACbyD,IAAK0B,EAAKnF,OACVI,SAAUiF,EAAKjF,gBAM7BE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAACqF,EAAD,CAAU1E,QAASxB,KAAKwB,cAW9Bb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,2CACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,8BA1KAG,aCDEkF,QACW,cAA7B5F,OAAO6F,SAASC,UAEe,UAA7B9F,OAAO6F,SAASC,UAEhB9F,OAAO6F,SAASC,SAASC,MACvB,2DCXN9B,IAAS+B,cAAc,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,iBAGvBC,IAASC,OAAOpG,EAAAC,EAAAC,cAACmG,EAAD,MAASC,SAASC,eAAe,SD6G3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7b176420.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport '../App.css';\r\n\r\nclass Nota extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.notaContent = props.notaContent;\r\n        this.notaId = props.notaId;\r\n    }\r\n    noteRemove(id){\r\n        \r\n        const response = window.confirm('Estas a punto de eliminar tu Nota, estas seguro?')\r\n        if (response) {\r\n            this.props.elimNota(id);\r\n        }\r\n        return;\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"col-md-4\">\r\n        <div className=\"Nota mt-4\">\r\n        <div>\r\n        <span className=\"trash\"\r\n        onClick={() => this.noteRemove(this.notaId) }\r\n        ><i className=\"fa fa-trash\"></i></span>\r\n        <p>{this.notaContent}</p>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n}export default Nota;","import React, {Component } from 'react';\r\nimport './FormNota.css';\r\n\r\nclass NoteForm extends Component{\r\n    constructor() {\r\n        super();\r\n        this.state={\r\n            nuevaNota:''\r\n        };\r\n        this.entradaUser = this.entradaUser.bind(this);\r\n        this.addNota = this.addNota.bind(this);\r\n    }\r\n    entradaUser(e){\r\n        this.setState({\r\n            nuevaNota: e.target.value\r\n        })\r\n    }\r\n    addNota(){\r\n        this.props.addNota(this.state.nuevaNota);\r\n        this.setState({\r\n            nuevaNota:''\r\n        });\r\n        this.textInput.focus();\r\n    }\r\n    componentDidMount() {\r\n        this.textInput.focus();\r\n    }\r\n    render() {\r\n        return (\r\n        <div className=\"NoteForm\">\r\n            <div className=\"centerForm\">\r\n            <div>\r\n            <input \r\n            placeholder=\"Escribe una Nota\"\r\n            ref={entrada =>{this.textInput = entrada;}}\r\n            value={this.state.nuevaNota}\r\n            onChange={this.entradaUser}\r\n            type= \"text\"/>\r\n            <br/>\r\n            <button className =\"buttonCrear\"onClick={this.addNota}>\r\n            Crear Nota</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n} export default NoteForm;","import React, { Component } from 'react';\r\nimport './FormTareas.css'\r\n\r\nclass TodoForm extends Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      titulo: '',\r\n      responsable: '',\r\n      descripcion: '',\r\n      prioridad: 'baja'\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.onAddTodo(this.state);\r\n    this.setState({\r\n      titulo: '',\r\n      responsable: '',\r\n      descripcion: '',\r\n      prioridad: 'baja'\r\n    });\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    const {value, name} = e.target;\r\n    console.log(value, name);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className=\"todoform\">\r\n          <div className=\"todoImput\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"titulo\"\r\n              className=\"inputext\"\r\n              value={this.state.titulo}\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"Titúlo\"\r\n              />\r\n          </div>\r\n          <div className=\"todoImput\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"responsable\"\r\n              className=\"inputext\"\r\n              value={this.state.responsable}\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"Responsable\"\r\n              />\r\n          </div>\r\n          <div className=\"todoImput\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"descripcion\"\r\n              className=\"inputext\"\r\n              value={this.state.descripcion}\r\n              onChange={this.handleInputChange}\r\n              placeholder=\"Descripción\"\r\n              />\r\n          </div>\r\n          <div className=\"todoImput\">\r\n            <select\r\n                name=\"prioridad\"\r\n                className=\"inputext\"\r\n                value={this.state.prioridad}\r\n                onChange={this.handleInputChange}\r\n              >\r\n              <option>baja</option>\r\n              <option>media</option>\r\n              <option>alta</option>\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" className=\"BtnCrear\">\r\n            Crear tarea\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default TodoForm;","import React, { Component } from 'react';\r\nimport '../App.css';\r\n// import firebase from 'firebase';\r\n// import { DB_CONFIG }from '../Config/Config';\r\n// import 'firebase/database';\r\n\r\n// data\r\n// import { tareas } from '../tareas.json';\r\n\r\n// subcomponents\r\nimport TodoForm from './FormTareas';\r\n\r\nclass Tasks extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tareas: []\r\n    }\r\n    this.handleAddTodo = this.handleAddTodo.bind(this);\r\n    \r\n  }\r\n\r\n  // componentDidMount(){\r\n  //   const {tareas} = this.state;\r\n  //   this.db.on('child_added', snap=>{\r\n  //     tareas.push({\r\n  //       tareaId: snap.key,\r\n  //       tareaContent: snap.val().tareaContent\r\n  //     })\r\n  //     this.setState({tareas});\r\n  //   });\r\n  //   this.db.on('child_removed', snap => {\r\n  //     for(let i =0; i < tareas.length; i++){\r\n  //       if(tareas[i].tareaId=snap.key) {\r\n  //         tareas.splice(i, 1);\r\n  //       }\r\n  //     }\r\n  //     this.setState({tareas});\r\n  //   });\r\n  // }\r\n  \r\n\r\n  \r\n  \r\n\r\n  removeTodo(index) {\r\n    this.setState({\r\n      tareas: this.state.tareas.filter((e, i) => {\r\n        return i !== index\r\n      })\r\n    });\r\n  }\r\n  \r\n\r\n  handleAddTodo(tarea) {\r\n    this.setState({\r\n      tareas: [...this.state.tareas, tarea]\r\n    })\r\n    // this.db.push().set({tarea: tarea});\r\n  }\r\n\r\n  render() {\r\n    const todos = this.state.tareas.map((tarea, i) => {\r\n      return (\r\n        <div className=\"col-md-4\" key={i}>\r\n            <div className=\"Tarea\">\r\n            <div className=\"tareaTextHeader\">\r\n              <h4>{tarea.titulo}</h4>\r\n            \r\n            </div>\r\n            <div className=\"tareaText\">\r\n              <p>{tarea.descripcion}</p>\r\n              <span className=\"tareaPriotity\">\r\n                {tarea.prioridad}\r\n              </span>\r\n            </div>\r\n            <br/>\r\n            <div className=\"tareaText\">\r\n             {tarea.responsable}\r\n            </div>\r\n            <div className=\"tareaFoot\">\r\n          \r\n             <br/>\r\n              <button\r\n                className=\"tareaBtn\"\r\n                onClick={this.removeTodo.bind(this, i)}>\r\n                <i className=\"fa fa-trash\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    });\r\n\r\n    // RETURN THE COMPONENT\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          <div className=\"row mt-4\">\r\n            <div className=\"todoform-md-4 text-center\">\r\n              <TodoForm onAddTodo={this.handleAddTodo}></TodoForm>\r\n              <p className=\"divCount\">\r\n               Tareas\r\n                <span className=\"iconCounter ml-2\">\r\n                {this.state.tareas.length}\r\n               </span>\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"col-md-9\">\r\n              <div className=\"row\">\r\n                {todos}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Nota from './Components/Notas';\nimport NoteForm from './Components/FormNota';\nimport firebase from 'firebase';\n// import {  fAuth, fProvider, DB_CONFIG }from './Config/Config';\nimport 'firebase/database';\nimport Tasks from './Components/tarea'\n// import FileUpload from './uploadFiles'\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        user: null,\n        notas: [],\n        pictures:[]\n    };\n    \n    // this.app = firebase.initializeApp(DB_CONFIG,'NoTasks');\n    // this.db = this.app.database().ref().child('notas');\n    // this.db2 = this.app.database().ref().child('tareas');\n    \n    this.addNota = this.addNota.bind(this);\n    this.iniSesion = this.iniSesion.bind(this);\n    this.finSesion = this.finSesion.bind(this);\n    // this.handleUpload = this.handleUpload.bind(this); \n    this.elimNota = this.elimNota.bind(this);\n    \n   \n  };\n\n componentWillMount(){\n  firebase.auth().onAuthStateChanged(user =>{\n    this.setState({user});\n  });\n  // firebase.database().ref('pictures').on('child_added', snapshot =>{\n  //   this.setState({\n  //     pictures: this.state.pictures.concat(snapshot.val())\n  //   });\n  // });\n  \n }\n\n  componentDidMount(){\n    const {notas} = this.state;\n    firebase.database().ref('notas').on('child_added', snapshot=>{\n      notas.push({\n        notaId: snapshot.key,\n        notaContent: snapshot.val().notaContent\n      })\n      this.setState({notas});\n    });\n    firebase.database().ref('notas').on('child_removed', snapshot => {\n      for(let i =0; i < notas.length; i++){\n        if(notas[i].notaId=snapshot.key) {\n          notas.splice(i, 1);\n        }\n      }\n      this.setState({notas});\n    });\n    \n  }\n  \n\n  \n  elimNota(notaId){\n    firebase.database().ref('notas').child(notaId).remove();\n  }\n  iniSesion(){\n    const provider=new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider)\n    \n  }\n  finSesion(){\n    firebase.auth().signOut()\n  }\n  \n \n   \n  addNota(nota){\n    let { notas } = this.state;\n    notas.push({\n      notaId:notas.length + 1,\n      notaContent: nota,\n    });\n    this.setState({ nota });\n    firebase.database().ref('notas').set({\n      nota: nota\n    });\n  }\n  // handleUpload(event){\n  //       const file = event.target.files[0];\n  //       const storageRef= firebase.storage().ref(`/images/${file.name}`);\n  //       const task= storageRef.put(file);\n\n  //       task.on('state_changed', snapshot =>{\n  //           let percentage = (snapshot.bytesTransferred / snapshot.totalBytes)*100;\n  //           this.setState({\n  //               uploadValue: percentage\n  //           })\n  //       }, error => {\n  //           console.log(error.message)\n  //       }, () => {\n  //         const record = {\n  //           photoURL: this.state.user.photoURL,\n  //           displayName: this.state.user.displayName,\n  //           image: task.snapshot.downloadURL\n  //         };\n  //         const dbRef = firebase.database().ref(`pictures`);\n  //         const newPicture = dbRef.push();\n  //         newPicture.set(record);         \n  //       });\n  //   }\n  \n\n  render() {\n      \n      return (\n      <div className=\"App\">\n            <nav className=\"Nav\">\n                <h2 className=\"notasks\">Notasks</h2>\n                <div>\n                    {this.state.user? \n                  <div className=\"ulNav\">\n                   <input type=\"checkbox\" id=\"main\"/>\n                   <label for=\"main\" className=\"menu\"><img className=\"avatar\" src={this.state.user.photoURL} alt={this.state.user.displayName}/></label>\n                    <nav className=\"navMenu\">\n                      \n                      <li><p className=\"pA2\">{ this.state.user.displayName}</p></li>\n                      <li><button className=\"button2\"onClick={this.finSesion}>Salir</button></li>\n                    </nav>\n                  </div>:\n                     <div className=\"Login\">\n                <button className=\"LoginBtn\" onClick={this.iniSesion}>Empezar</button>\n                <br/>\n                <p className=\"pA\">inicia sesion con tu cuenta de google</p>\n                     </div>   \n                  }\n                </div>\n            </nav>\n         <div>\n            {this.state.user? \n           <div>\n            <Tasks/>\n              <div className=\"notesContainer\">\n                  <div className=\"col-md-12\">\n                    <div className=\"row\">\n                      {this.state.notas.map(nota =>{\n                          return(\n                            <Nota\n                            notaContent={nota.notaContent}\n                            notaId={nota.notaId}\n                            key={nota.notaId}\n                            elimNota={this.elimNota} />\n                          )\n                        })}\n                    </div>\n                  </div>\n              </div> \n              <div className=\"row\">\n                <div className=\"noteFooter\">\n                  <div className=\"tareasForm-md-2 text-center\">\n                    <NoteForm addNota={this.addNota}/>\n                        {/* <p className=\"\">\n                          Notas\n                        <span className=\"badge badge-pill badge-light ml-2\">\n                        { this.state.notas.length}\n                        </span>\n                        </p> */}\n                  </div>\n                </div>\n              </div>\n           </div>\n            : <div className=\"preWellcome\">\n                <div className=\"wellcome\">\n                  <h1>Bienvenido</h1>\n                  <br/>\n                  <h4 className=\"h4A\">administra tu tiempo con nuestra app de</h4>\n                  <br/>\n                  <h2 className=\"notarea\">Notas & Tareas!</h2>\n                </div>\n                {/* <div className=\"Login\">\n                  <br/>\n                  <p className=\"LoginBtn\">inicia sesion con tu cuenta de google</p>\n                </div> */}\n              </div>\n               \n            }   \n              {/* // <FileUpload onUpload={this.handleUpload}/>\n              // {this.state.pictures.map(picture =>(\n              //   <div>\n              //     <img src={picture.image} alt=\"\"/>\n              //     <br/>\n              //     <img src={picture.photoURL} alt={picture.displayName}/>\n              //     <br/>\n              //     <span>{picture.displayName} </span>\n              //   </div>\n              // )).reverse()\n              // }     */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport firebase from 'firebase';\nimport * as serviceWorker from './serviceWorker';\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyD4UlpxCG3N1XxdgLl7o9X7zHaFPy8SLUs\",\n    authDomain: \"tareasfandino.firebaseapp.com\",\n    databaseURL: \"https://tareasfandino.firebaseio.com\",\n    projectId: \"tareasfandino\",\n    storageBucket: \"tareasfandino.appspot.com\",\n    messagingSenderId: \"178398811459\"\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}